/**
 * Function will filter non unique value recursivly.
 * @description
 * The function has two modes `soft` and `hard` soft mode ignores array order hard mode preserves array order.
 * @param array - source array
 * @param mode - array comparison mode
 * @example
 *    deepUniq([{ a: [1, 2] }, { a: [1, 2] }] }, { a: [2, 1] }] }], 'soft') // [{ a: [1, 2] }]
 * @example
 *    deepUniq([{ a: [1, 2] }, { a: [1, 2] }] }, { a: [2, 1] }] }], 'hard') // [{ a: [1, 2] }, { a: [2, 1] }]
 * @pipeable
 * @category Array
 */
export declare function deepUniq<T>(array: readonly T[], mode?: 'soft' | 'hard'): T[];
export declare function deepUniq<T>(mode?: 'soft' | 'hard'): (array: readonly T[]) => T[];
//# sourceMappingURL=deepUniq.d.ts.map